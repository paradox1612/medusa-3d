version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/medusa-db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret
      COOKIE_SECRET: your-cookie-secret
      STRIPE_WEBHOOK_SECRET: your-stripe-webhook-secret
    ports:
      - "9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Storefront Service
  storefront:
    build:
      context: ./storefornt
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_MEDUSA_BACKEND_URL: http://backend:9000
    ports:
      - "8000:8000"
    depends_on:
      - backend
    volumes:
      - ./storefornt:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  redis_data:
